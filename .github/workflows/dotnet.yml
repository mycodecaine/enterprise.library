name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Run Tests with Coverage Collection
      run: dotnet test ./test/**/*.csproj --configuration Release --no-build --collect:"XPlat Code Coverage"

    - name: Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Generate Code Coverage Report
      run: reportgenerator "-reports:**/TestResults/**/coverage.cobertura.xml" "-targetdir:coveragereport" -reporttypes:Html
      env:
        PATH: ${{ env.PATH }}:/home/runner/.dotnet/tools

    - name: Display Coverage in Console
      run: reportgenerator "-reports:**/TestResults/**/coverage.cobertura.xml" "-targetdir:coveragereport" -reporttypes:TextSummary
           cat coveragereport/Summary.txt
      env:
        PATH: ${{ env.PATH }}:/home/runner/.dotnet/tools

    - name: Upload Code Coverage Report
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: coveragereport

    - name: Upload Coverage to Codecov
      if: success()
      uses: codecov/codecov-action@v3
      with:
        files: "**/TestResults/**/coverage.cobertura.xml"  # Codecov will look for the cobertura report
        token: ${{ secrets.CODECOV_TOKEN }}  # Only for private repos
        flags: unittests
        fail_ci_if_error: true

    - name: Pack
      run: dotnet pack --configuration Release --no-build --output ./nupkg
    
    - name: Publish to GitHub Packages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        for file in ./nupkg/*.nupkg; do
          dotnet nuget push "$file" --source "https://nuget.pkg.github.com/mycodecaine/index.json" --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
        done
